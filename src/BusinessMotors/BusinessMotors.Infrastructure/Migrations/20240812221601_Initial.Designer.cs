// <auto-generated />
using System;
using BusinessMotors.Infrastructure.Context.CManager;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BusinessMotors.Infrastructure.Migrations
{
    [DbContext(typeof(BusinessMotorsDBContext))]
    [Migration("20240812221601_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("AnuncioCaracteristica", b =>
                {
                    b.Property<Guid>("AnuncioId")
                        .HasColumnType("char(36)");

                    b.Property<int>("CaracteristicasId")
                        .HasColumnType("int");

                    b.HasKey("AnuncioId", "CaracteristicasId");

                    b.HasIndex("CaracteristicasId");

                    b.ToTable("AnuncioCaracteristica");
                });

            modelBuilder.Entity("AnuncioOpcional", b =>
                {
                    b.Property<Guid>("AnuncioId")
                        .HasColumnType("char(36)");

                    b.Property<int>("OpcionaisId")
                        .HasColumnType("int");

                    b.HasKey("AnuncioId", "OpcionaisId");

                    b.HasIndex("OpcionaisId");

                    b.ToTable("AnuncioOpcional");
                });

            modelBuilder.Entity("AnuncioTipoCombustivel", b =>
                {
                    b.Property<Guid>("AnuncioId")
                        .HasColumnType("char(36)");

                    b.Property<int>("TiposCombustiveisId")
                        .HasColumnType("int");

                    b.HasKey("AnuncioId", "TiposCombustiveisId");

                    b.HasIndex("TiposCombustiveisId");

                    b.ToTable("AnuncioTipoCombustivel");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Anuncio", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<int>("AnoFabricacao")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int>("AnoVeiculo")
                        .HasMaxLength(4)
                        .HasColumnType("int");

                    b.Property<int>("Cambio")
                        .HasColumnType("int");

                    b.Property<int>("Cor")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DataAtualizacao")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime?>("DataCriacao")
                        .IsRequired()
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("ExibirEmail")
                        .HasColumnType("tinyint(1)");

                    b.Property<bool>("ExibirTelefone")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Km")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ModeloId")
                        .HasColumnType("int");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Portas")
                        .HasColumnType("int");

                    b.Property<decimal>("Preco")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("varchar(36)");

                    b.Property<int>("VersaoId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId");

                    b.HasIndex("VersaoId");

                    b.ToTable("Anuncio");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Caracteristica", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Caracteristica");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Imagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("AnuncioId")
                        .HasColumnType("char(36)");

                    b.Property<string>("UrlS3")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("AnuncioId");

                    b.ToTable("Imagem");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Marca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Marca");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Modelo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("MarcaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MarcaId");

                    b.ToTable("Modelo");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Opcional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Opcional");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.TipoCombustivel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TipoCombustivel");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Versao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("ModeloId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ModeloId");

                    b.ToTable("Versao");
                });

            modelBuilder.Entity("AnuncioCaracteristica", b =>
                {
                    b.HasOne("BusinessMotors.Domain.Models.Anuncio", null)
                        .WithMany()
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessMotors.Domain.Models.Caracteristica", null)
                        .WithMany()
                        .HasForeignKey("CaracteristicasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnuncioOpcional", b =>
                {
                    b.HasOne("BusinessMotors.Domain.Models.Anuncio", null)
                        .WithMany()
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessMotors.Domain.Models.Opcional", null)
                        .WithMany()
                        .HasForeignKey("OpcionaisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("AnuncioTipoCombustivel", b =>
                {
                    b.HasOne("BusinessMotors.Domain.Models.Anuncio", null)
                        .WithMany()
                        .HasForeignKey("AnuncioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BusinessMotors.Domain.Models.TipoCombustivel", null)
                        .WithMany()
                        .HasForeignKey("TiposCombustiveisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Anuncio", b =>
                {
                    b.HasOne("BusinessMotors.Domain.Models.Modelo", "Modelo")
                        .WithMany()
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("BusinessMotors.Domain.Models.Versao", "Versao")
                        .WithMany()
                        .HasForeignKey("VersaoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Modelo");

                    b.Navigation("Versao");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Imagem", b =>
                {
                    b.HasOne("BusinessMotors.Domain.Models.Anuncio", null)
                        .WithMany("ImagensS3")
                        .HasForeignKey("AnuncioId");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Modelo", b =>
                {
                    b.HasOne("BusinessMotors.Domain.Models.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Versao", b =>
                {
                    b.HasOne("BusinessMotors.Domain.Models.Modelo", "Modelo")
                        .WithMany("Versoes")
                        .HasForeignKey("ModeloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Modelo");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Anuncio", b =>
                {
                    b.Navigation("ImagensS3");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Marca", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("BusinessMotors.Domain.Models.Modelo", b =>
                {
                    b.Navigation("Versoes");
                });
#pragma warning restore 612, 618
        }
    }
}
