name: Destroy terraform resources on the given folder

on:
  workflow_dispatch:
    inputs:
      dir:
        description: 'Directory with resources to be destroyed'
        required: true
        default: 'infra'

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_REGION: us-east-1

jobs:
  destroy-infra-2-dev:
    name: 'terraform destroy infra-2 dev'
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: "infra-2"

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.3

      - name: Terraform Init
        id: init
        run: terraform init -backend=true -backend-config="config/dev/backend.hcl"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var-file="config/dev/terraform.tfvars" -lock=false
  
  remove-image:
    needs: apply-infra1-dev
    name: 'Docker remove image of ECR'
    runs-on: ubuntu-latest 
    env:
      TF_WORKING_DIR: 'src/CManager'
      ECR_REPOSITORY: ct_tech_repo   

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ env.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}
    
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Remove image
      id: remove-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        IMAGE_TAG: latest
      run: |
        docker rmi $ECR_REGISTRY/$ECR_REPOSITORY:latest
  
  destroy-infra-1-dev:
    needs: destroy-infra-2-dev
    name: 'terraform destroy infra-1 dev'
    runs-on: ubuntu-latest
    env:
      TF_WORKING_DIR: "infra-1"

    defaults:
      run:
        shell: bash
        working-directory: ${{ env.TF_WORKING_DIR }}

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.3.3

      - name: Terraform Init
        id: init
        run: terraform init -backend=true -backend-config="config/dev/backend.hcl"

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Destroy
        run: terraform destroy -auto-approve -var-file="config/dev/terraform.tfvars" -lock=false
